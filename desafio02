#Desafio - Otimizando o Sistema Bancário com Python

import textwrap
def menu():
    menu = """\n
    ========== MENU ==========
    [1]\tDepositar
    [2]\tSacar
    [3]\tExtrato
    [4]\tNova Conta
    [5]\tListar Contas
    [6]\tNovo Usuário
    [7]\tSair\n
    ==========================
    """
    return input(textwrap.dedent(menu))


def sacar(*, saldo, valor, extrato, limite, numero_saques, limite_saques):
    excedeu_saldo = valor > saldo
    excedeu_limite = valor > limite
    excedeu_saques = numero_saques >= limite_saques

    if excedeu_saques:
        print("\nOperação Falhou: Máximo de Saques Atingido")
    elif excedeu_saldo:
        print("\nOperação Falhou: Saldo Insuficiente")
    elif excedeu_limite:
        print("\nOperação Falhou: Valor do Saque excede o Limite")
    
    elif valor > 0:
        saldo -= valor
        extrato += f"Saque:\t\tR$ {valor:.2f}\n"
        numero_saques += 1
        print("\n--- Saque realizado com sucesso! ---")
    
    else:
        print("Operação falhou: Valor informado é inválido")
    
    return saldo, extrato, numero_saques

def depositar(saldo, valor, extrato, /):
    if valor > 0:
        saldo += valor
        extrato += f"Depósito: R${valor:.2f}\n"
        print("\n--- Depósito realizado com sucesso! ---")
    else:
        print("\nOperação Falhou: Valor Inválido para Depósito")
    return saldo, extrato

def ver_extrato(saldo, /, *, extrato):
    print("\n============ EXTRATO ============")
    if not extrato:
        print("Não houve movimentações.")
    else:
        print(extrato)
    print(f"\nSaldo: R$ {saldo:.2f}")

def criar_usuario(usuarios):
    cpf = input("Por favor, informe o seu CPF: ")
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print("Aviso: Este CPF já está cadastrado.")
        return

    nome = input("Nome Completo: ")
    nascimento = input("Data de Nascimento (dd-mm-aaaa): ")
    endereco = input("Endereço: ")

    usuarios.append({"nome":nome, "nascimento": nascimento, "cpf": cpf, "endereco": endereco})

    print("--- Cadastro realizado com sucesso! ---")

def filtrar_usuario(cpf, usuarios):
    usuarios_filtrados = [usuario for usuario in usuarios if usuario["cpf"] == cpf]
    return usuarios_filtrados[0] if usuarios_filtrados else None


def criar_conta(agencia, numero_conta, usuarios):
    cpf = input("Informe o CPF do usuário: ")
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print("\n--- Conta criada com sucesso! ---")
        return {"agencia": agencia, "numero_conta": numero_conta, "usuario": usuario}

    print("\nErro: Usuário não encontrado! Criação de conta encerrado.")

def listar_contas(contas):
    if not contas:
        print("Nenhuma conta cadastrada.")
        return
    
    print("\n====== LISTA DE CONTAS ======")
    for conta in contas:
        linha = f"""\
            Agência:\t{conta['agencia']}
            C/C:\t\t{conta['numero_conta']}
            Titular:\t{conta['usuario']['nome']}
        """
        print("-" * 50)
        print(textwrap.dedent(linha))
    print("-" * 50)

def main():
    LIMITE_SAQUES = 3
    AGENCIA = "0001"

    saldo = 0
    limite = 500
    extrato = ""
    numero_saques = 0
    usuarios = []
    contas = []

    while True:
        opcao = menu()

        if opcao == "1":
            try:
                valor = float(input("Valor para depósito: "))
                saldo, extrato = depositar(saldo, valor, extrato)
            except ValueError:
                print("\nOperação Falhou: Valor Inválido para Depósito")

        elif opcao == "2":
            try:
                valor = float(input("Valor para saque: "))
                saldo, extrato = sacar(
                    saldo=saldo,
                    valor=valor,
                    extrato=extrato,
                    limite=limite,
                    numero_saques=numero_saques,
                    limite_saques=LIMITE_SAQUES,
                )
            except ValueError:
                print("\nOperação Falhou: Valor Inválido para Saque")

        elif opcao == "3":
            ver_extrato(saldo, extrato=extrato)

        elif opcao == "4":
            numero_conta = len(contas) + 1
            conta = criar_conta(AGENCIA, numero_conta, usuarios)

            if conta:
                contas.append(conta)

        elif opcao == "5":
            listar_contas(contas)

        elif opcao == "6":
            criar_usuario(usuarios)

        elif opcao == "7":
            print("\nSaindo do sistema...")
            break

        else:
            print("Operação inválida: Por favor selecione novamente a operação desejada.")

main()
